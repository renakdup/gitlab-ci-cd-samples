# GitLab CI Docker-in-Docker sample.
#
# Push to registry works only if you run it manually on a `master` branch.

variables:
  PROJECT: Docker-in-Docker-BE-FE-App
  AWS_REGION: us-east-1 # or any
  REGISTRY_URL: example.ecr.us-east-1.amazonaws.com
  REPO_URL_FRONT: example.ecr.us-east-1.amazonaws.com/<REPOSTIROY-NAME-2>
  REPO_URL_BACK: example.us-east-1.amazonaws.com/<REPOSTIROY-NAME>
  DOCKER_HOST: tcp://localhost:2375/

image: docker:19.03.13

services:
  - docker:19.03.13-dind

stages:
  - build_images
  - push_to_registry
  
before_script:
  #- apk update
  - apk add --no-cache make
  - cp .env.dist .env
  - make init
  
building frontend image:
  stage: build_images
  tags:
    - docker
  script:
    - docker build -t $REPO_URL_FRONT:$CI_COMMIT_SHA ./app/frontend

building backend image:
  stage: build_images
  tags:
    - docker
  script:
  - docker build -t $REPO_URL_BACK:$CI_COMMIT_SHA ./app/backend

push images:
  stage: push_to_registry
  tags:
    - docker
  when: manual
  allow_failure: false
  only:
    - master
  script:
    - apk add --no-cache curl jq python2 py-pip make git
    - pip install awscli
    - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REGISTRY_URL

    - docker build -t $REPO_URL_FRONT:$CI_COMMIT_SHA ./app/frontend
    - docker build -t $REPO_URL_BACK:$CI_COMMIT_SHA ./app/backend

    - docker push $REPO_URL_FRONT:$CI_COMMIT_SHA
    - docker push $REPO_URL_BACK:$CI_COMMIT_SHA
    - 'echo "Release version: $CI_COMMIT_SHA"'
